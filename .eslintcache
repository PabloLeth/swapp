[{"/home/pablo/Documentos/swapp/src/index.js":"1","/home/pablo/Documentos/swapp/src/App.js":"2","/home/pablo/Documentos/swapp/src/components/Navbar.js":"3","/home/pablo/Documentos/swapp/src/pages/Index.js":"4","/home/pablo/Documentos/swapp/src/pages/Profile.js":"5","/home/pablo/Documentos/swapp/src/components/Login.js":"6","/home/pablo/Documentos/swapp/src/components/Rota.js":"7","/home/pablo/Documentos/swapp/src/pages/Chat.js":"8","/home/pablo/Documentos/swapp/src/components/RotaMaker.js":"9","/home/pablo/Documentos/swapp/src/pages/Manager.js":"10","/home/pablo/Documentos/swapp/src/components/Register.js":"11","/home/pablo/Documentos/swapp/src/components/SearchShifts.js":"12","/home/pablo/Documentos/swapp/src/components/ChatWindow.js":"13","/home/pablo/Documentos/swapp/src/pages/LoginPage.js":"14","/home/pablo/Documentos/swapp/src/context/GlobalContext.js":"15","/home/pablo/Documentos/swapp/src/context/auth.js":"16","/home/pablo/Documentos/swapp/src/PrivateRoute.js":"17","/home/pablo/Documentos/swapp/src/components/ModalShift.js":"18","/home/pablo/Documentos/swapp/src/pages/Home.js":"19","/home/pablo/Documentos/swapp/src/pages/Pool.js":"20","/home/pablo/Documentos/swapp/src/components/ShiftList.js":"21","/home/pablo/Documentos/swapp/src/components/BodyRota.js":"22","/home/pablo/Documentos/swapp/src/components/Weekshifts.js":"23","/home/pablo/Documentos/swapp/src/components/ChatList.js":"24"},{"size":264,"mtime":1617047522664,"results":"25","hashOfConfig":"26"},{"size":2441,"mtime":1617123842011,"results":"27","hashOfConfig":"26"},{"size":1317,"mtime":1617123733047,"results":"28","hashOfConfig":"26"},{"size":787,"mtime":1616878620621,"results":"29","hashOfConfig":"26"},{"size":659,"mtime":1615382256882,"results":"30","hashOfConfig":"26"},{"size":2550,"mtime":1616002712379,"results":"31","hashOfConfig":"26"},{"size":4074,"mtime":1616504848006,"results":"32","hashOfConfig":"26"},{"size":520,"mtime":1616678328753,"results":"33","hashOfConfig":"26"},{"size":11610,"mtime":1617033957166,"results":"34","hashOfConfig":"26"},{"size":401,"mtime":1616681235817,"results":"35","hashOfConfig":"26"},{"size":2486,"mtime":1612973871668,"results":"36","hashOfConfig":"26"},{"size":818,"mtime":1617041664048,"results":"37","hashOfConfig":"26"},{"size":438,"mtime":1616678273601,"results":"38","hashOfConfig":"26"},{"size":211,"mtime":1615127036307,"results":"39","hashOfConfig":"26"},{"size":88,"mtime":1615134637381,"results":"40","hashOfConfig":"26"},{"size":166,"mtime":1615205870573,"results":"41","hashOfConfig":"26"},{"size":406,"mtime":1615287503409,"results":"42","hashOfConfig":"26"},{"size":372,"mtime":1615306883827,"results":"43","hashOfConfig":"26"},{"size":262,"mtime":1616570926265,"results":"44","hashOfConfig":"26"},{"size":1382,"mtime":1617041506072,"results":"45","hashOfConfig":"26"},{"size":2673,"mtime":1617115206011,"results":"46","hashOfConfig":"26"},{"size":3467,"mtime":1616939260650,"results":"47","hashOfConfig":"26"},{"size":8918,"mtime":1617034143492,"results":"48","hashOfConfig":"26"},{"size":362,"mtime":1616678355113,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1nxl4n5",{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/pablo/Documentos/swapp/src/index.js",[],["110","111"],"/home/pablo/Documentos/swapp/src/App.js",["112","113","114","115","116","117"],"/home/pablo/Documentos/swapp/src/components/Navbar.js",["118","119"],"/home/pablo/Documentos/swapp/src/pages/Index.js",[],"/home/pablo/Documentos/swapp/src/pages/Profile.js",[],"/home/pablo/Documentos/swapp/src/components/Login.js",["120","121"],"import { useContext,useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport {Redirect} from 'react-router-dom';\nimport {useAuth} from '../context/auth'\n\nfunction Login() {\n    // const {isloged, setIsloged} = useContext(GlobalContext);\n    const [isloged, setIsloged] = useState(false);\nconst {setAuthTokens} = useAuth();\n\n    const loginInput = {\n        username: \"\", \n        password: \"\"\n    }\n\n\n    const handlePassword = (e) => {\n        loginInput.password = e.target.value\n    }\n    const handleUser = (e) => {\n        loginInput.username = e.target.value\n    }\n\n    const URLLOGIN = \"http://localhost:8000/login\";\n\n    const login = (e) => {\n        // funtcion to log into Swapp\n        e.preventDefault();\n       // alert(`tu usuario ${loginInput.username} y contraseña ${loginInput.password} `);\n\n        fetch(URLLOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(loginInput)\n        }).then(response => response.json())\n            .then(data => {\n\n                if (data.token){\n                    setAuthTokens(data.token)\n                   \n                     setIsloged(true);\n                }\n              \n              \n               \n            }).catch(error => console.log(\"ha habido un error:\", error));\n\n    }\n    if (isloged){\n         return <Redirect to=\"/\"/>\n    }\n\n    return (\n        <>\n            <div className=\"loginback\">\n\n\n                <div className=\"loginContainer\" id=\"loginContainer\">\n                    <h1>Inicio de sesión</h1>\n                    <form>\n                        <div className=\"form-group form \">\n                            <label htmlFor=\"emailLoginInput\">Email</label>\n                            <input type=\"text\" onChange={handleUser} className=\"form-control col-6 \" placeholder=\"introduce el Email\" id=\"emailLoginInput\" />\n                        </div>\n                        <div className=\"form-group form \">\n                            <label htmlfor=\"passwordLoginInput\">Constraseña</label>\n                            <input type=\"password\" onChange={handlePassword} className=\"form-control col-6\" placeholder=\"contraseña\" id=\"passwordLoginInput\" />\n                        </div>\n                        <button className=\"btn btn-success \" id=\"loginButton\" onClick={login} >Iniciar sesión</button>\n\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Login;","/home/pablo/Documentos/swapp/src/components/Rota.js",["122","123","124","125","126","127","128","129"],"import { useState, useEffect } from 'react';\nimport ModalShift from './ModalShift';\nimport BodyRota from './BodyRota';\nimport {Redirect, Route} from 'react-router-dom';\n\n\nfunction Rota() {\n    const dayName = [\"#\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\n    const monthName = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n    const [data, setData] = useState([]);\n    const todayWeek = [];\n    const today = new Date;\n    for (let i = 1; i <= 7; i++) {\n        let first = today.getDate() - today.getDay() + i;\n        let day = new Date(today.setDate(first));\n        todayWeek.push(day);\n    }\n    const [week, setWeek] = useState(todayWeek);\n\n    \n    let token = localStorage.getItem(\"token\");\n    // let token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MTY0MjgzMDcsImV4cCI6MTYxNjQzMTkwNywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYW5pdGFkaW5hbWl0YUBob3RtYWlsLmNvbSJ9.NcUUgJm130Yiknf0StRLj0CIHTAQp1CDFWHFSWzB_lUi3NGlZHUB01r9er5p1i_Ec1p0LwgvUh1im4FsXo85-GJKrW987smTElBkSt0nuAAj2gr_2fEcmwrZC3m_SHWwfypYppBmhfQQvJHHAk9N37jMtxTprKZ1DNN0dou975URJWndnxzhrjCg-eRMtrDMsciIgDp1P05dVi12rKdojdyizI2t2vPOy5FxFo8TgWN0i_N9uNVc9xhC01ySIfF6uHRmF1M1ILUuQ63-0mrDljQIqCbhFMVwhrdQIEXvap2sbgpMnxQ0lUxnulJIYyB_ivv5UPkPximwzlZ5tGxVuQ\";\n    const URLSHIFT = \"http://localhost:8000/shift/rotauser\";\n    \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n        },\n      body: JSON.stringify({dateFromjsn : week[0].toISOString().slice(0, 10), dateTojsn : week[6].toISOString().slice(0, 10)})\n     \n    };\n  \n    function handlenext() {\n        nextWeek();\n\n    }\n    function handleprev() {\n        prevWeek();\n       \n    }\n    function nextWeek() {\n        const weekResult = [];\n        week.map(date => {\n\n            let result = new Date(date);\n            result.setDate(result.getDate() + 7);\n            weekResult.push(result);\n\n        })\n\n        return setWeek(weekResult);\n    }\n    function prevWeek() {\n        const weekResult = [];\n        week.map(date => {\n            let result = new Date(date);\n            result.setDate(result.getDate() - 7);\n            weekResult.push(result);\n        })\n        return setWeek(weekResult);\n    }\n    \n    useEffect(() => {\n\n    fetch(URLSHIFT,reqOpt)\n    .then(response => {\n        if (response.ok){\n            response.json()\n            .then(data => {setData(data);console.log(data)})\n        }\n        if(response.status==401){\n            alert(\"Wopa! no estas logueado o no tienes permisos para acceder\");\n           \n        }\n    })\n       \n    .catch(error => {\n     console.log(\"ha habido un error:\", error)\n    }); \n\n    }, [week]);\n  \n\n    return (\n        <>\n            <div className=\"container row justify-content-around \">\n                <input type=\"button\" value=\"semana anterior\" onClick={() => { handleprev() }} />\n                <div className=\"text-center\" >\n                    <h1>{week[0].getFullYear()}</h1>\n                    <h3>semana del {week[0].getDate()} de {monthName[week[0].getMonth()]} al {week[6].getDate()} de {monthName[week[6].getMonth()]}</h3>\n                </div>\n                <input type=\"button\" value=\"semana proxima\" onClick={() => { handlenext() }} />\n            </div>\n            <table className=\"table table-hover\">\n                <thead className=\"table-dark\">\n                    <tr>\n                        {dayName.map(value => {return <th scope=\"col\">{value}</th>})}\n                    </tr>\n                    <tr>\n                        <th scope=\"col\"></th>\n                        {week.map(day => { return <th colspan=\"1\" scope=\"col\">{(\"0\" + day.getDate()).slice(-2)} - {(\"0\" + (day.getMonth() + 1)).slice(-2)}</th> })}\n\n                    </tr>\n                </thead>\n                <tbody>\n                    <BodyRota  data={data} />\n\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Rota;","/home/pablo/Documentos/swapp/src/pages/Chat.js",[],"/home/pablo/Documentos/swapp/src/components/RotaMaker.js",["130","131","132","133","134","135"],"import { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Weekshifts from './Weekshifts';\nfunction RotaMaker() {\n  //const dataResponse = [{\"worker\":\"antonio \",\"id\":2,\"shifts\":[]},{\"worker\":\"DA BOSS\",\"id\":3,\"shifts\":[]},{\"worker\":\"antonio\",\"id\":4,\"shifts\":[]},{\"worker\":\"ana\",\"id\":5,\"shifts\":[{\"id\":12,\"date\":{\"date\":\"2021-03-29 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-29 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-29 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":13,\"date\":{\"date\":\"2021-03-29 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-29 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-29 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":14,\"date\":{\"date\":\"2021-03-30 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-30 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-30 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":15,\"date\":{\"date\":\"2021-03-30 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-30 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-30 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":16,\"date\":{\"date\":\"2021-03-31 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-31 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-31 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":17,\"date\":{\"date\":\"2021-03-31 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-03-31 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-03-31 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":18,\"date\":{\"date\":\"2021-04-01 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-01 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-01 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":19,\"date\":{\"date\":\"2021-04-01 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-01 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-01 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":20,\"date\":{\"date\":\"2021-04-02 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-02 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-02 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":21,\"date\":{\"date\":\"2021-04-02 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-02 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-02 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":22,\"date\":{\"date\":\"2021-04-03 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-03 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-03 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":23,\"date\":{\"date\":\"2021-04-03 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-03 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-03 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true},{\"id\":24,\"date\":{\"date\":\"2021-04-04 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-04 10:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-04 16:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"morning\",\"active\":true},{\"id\":25,\"date\":{\"date\":\"2021-04-04 00:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"startShift\":{\"date\":\"2021-04-04 18:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"endShift\":{\"date\":\"2021-04-04 20:00:00.000000\",\"timezone_type\":3,\"timezone\":\"Europe\\/Berlin\"},\"shiftType\":\"evening\",\"active\":true}]},{\"worker\":\"Raquel\",\"id\":6,\"shifts\":[]},{\"worker\":\"Belen\",\"id\":7,\"shifts\":[]},{\"worker\":\"juan\",\"id\":8,\"shifts\":[]},{\"worker\":\"rocio\",\"id\":9,\"shifts\":[]},{\"worker\":\"Pedro\",\"id\":10,\"shifts\":[]},{\"worker\":\"laura\",\"id\":11,\"shifts\":[]},{\"worker\":\"andrea\",\"id\":12,\"shifts\":[]},{\"worker\":\"alejandro\",\"id\":13,\"shifts\":[]},{\"worker\":\"eladio\",\"id\":14,\"shifts\":[]}]\n                     // const week = [\"#\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Friday\",\"Saturday\",\"Sunday\"];\n    const shfitType = [\"1\", \"2\"]; /* necesito cambiarlo por 2 y 1 para el back? */\n    const month = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n    const today = new Date;\n    let token = localStorage.getItem(\"token\");\n    const todayWeek = [];\n    \n    for (let i = 1; i <= 7; i++) {\n      let first = today.getDate() - today.getDay() + i ;\n      let day = new Date(today.setDate(first));\n      todayWeek.push(day);\n    }\n  \n    const[shifts, setShifts] = useState([null]);\n\n   const [week, setWeek] = useState(todayWeek);\n\n   function getDataWeek(){\n    const URLROTA = \"http://localhost:8000/shift/manager/rotacheck\";\n  \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n                },\n      body: JSON.stringify({dateFromjsn :(week[0].toISOString().slice(0, 10)), dateTojsn: (week[6].toISOString().slice(0, 10)) })\n     \n    };\n  \n     \n      fetch(URLROTA,reqOpt)\n      .then(response =>{ \n        if (response.status === 401){\n          alert(\"epaaa no estas logueado tira patras!\")\n        }else{\n\n          response.json()\n          .then(data => {\n          \n             setShifts(data);\n             \n           \n          }\n    \n          ).catch(error => {\n           console.log(\"ha habido un error:\", error)\n          });\n        }\n      })\n    } \nuseEffect(() => {\n  getDataWeek();\n \n \n}, [week]);\n\n   function handlenext(){\n    nextWeek();\n    \n   }\n   function handleprev(){\n    prevWeek();\n    \n   }\n   function nextWeek() {\n    const weekResult = [];\n    week.map(date=>{\n       \n        let result = new Date(date);\n        result.setDate(result.getDate() + 7);\n        weekResult.push(result);\n\n    })\n    setShifts([null])\n    return setWeek(weekResult);\n  }\n  function prevWeek() {\n    const weekResult = [];\n    week.map(date =>{\n       let result = new Date(date);\n        result.setDate(result.getDate() - 7);\n        weekResult.push(result);\n    });\n    setShifts([null]);\n    return setWeek(weekResult);\n  }\n\n  const muestrashifts = () =>{\n      console.log(\"turnos\",shifts);\n  }\n \n  const sendToDb = () =>{\n    const URLADD = \"http://localhost:8000/shift/manager/new\";\n  \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n                },\n      body: JSON.stringify(shifts)\n     \n    };\n  \n     \n      fetch(URLADD,reqOpt)\n      .then(response =>{ \n        if (response.status === 401){\n          alert(\"epaaa no estas logueado tira patras!\")\n        }else{\n\n          response.json()\n          .then(data => {\n          \n           console.log(data);\n             \n           \n          }\n    \n          ).catch(error => {\n           console.log(\"ha habido un error:\", error)\n          });\n        }\n      })\n  }\n  \n  \n\n    return (\n        <>\n        <div className=\"container row justify-content-around \">\n            <div  className=\"d-flex justify-content-center align-items-end\">\n                <input type=\"button\" value=\"semana anterior\"onClick={()=>{handleprev()}}  />\n            </div>\n            <div className=\"text-center\" >\n                <h1>{week[0].getFullYear()}</h1>\n                <h3>semana del {week[0].getDate()} de {month[week[0].getMonth()]} al {week[6].getDate()} de {month[week[6].getMonth()]}</h3>\n            </div>\n            <div  className=\"d-flex justify-content-center align-items-end\">\n            <input type=\"button\" value=\"semana proxima\" onClick={()=>{handlenext()}}/>\n            </div>\n        </div>\n     \n       \n            <form action=\" \">\n                <table id=\"table-rota\" className=\"table table-sm table-bordered text-center my-3\">\n                {/* <caption> Rota </caption> */}\n                    <thead className=\"table-dark \">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th colspan=\"1\" scope=\"col\">Monday</th>\n                            <th colspan=\"1\" scope=\"col\">Tuesday</th>\n                            <th colspan=\"1\" scope=\"col\">Wednesday</th>\n                            <th colspan=\"1\" scope=\"col\">Thursday</th>\n                            <th colspan=\"1\" scope=\"col\">Friday</th>\n                            <th colspan=\"1\" scope=\"col\">Saturday</th>\n                            <th colspan=\"1\" scope=\"col\">Sunday</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\"></th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[0].getDate()).slice(-2)}-{(\"0\" + (week[0].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[1].getDate()).slice(-2)}-{(\"0\" + (week[1].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[2].getDate()).slice(-2)}-{(\"0\" + (week[2].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[3].getDate()).slice(-2)}-{(\"0\" + (week[3].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[4].getDate()).slice(-2)}-{(\"0\" + (week[4].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[5].getDate()).slice(-2)}-{(\"0\" + (week[5].getMonth() + 1)).slice(-2)}</th>\n                            <th colspan=\"1\" scope=\"col\">{(\"0\"+week[6].getDate()).slice(-2)}-{(\"0\" + (week[6].getMonth() + 1)).slice(-2)}</th>\n                       \n                        </tr>\n                    </thead>\n                    <tbody className=\"table-hover\">\n                       \n                       {\n                       shifts.map(worker =>\n                     <Weekshifts worker= {worker} week= {week} setShifts = {setShifts} shifts = {shifts}/>\n                      ) }\n                    </tbody>\n                </table>\n            </form>\n            <button onClick={()=>{muestrashifts()}}>MUESTRA LOS SHIFTS A</button>\n            \n            <button onClick={()=>{sendToDb()}}>Enviar a DB</button>\n          \n        </>\n    )\n}\n\nexport default RotaMaker;","/home/pablo/Documentos/swapp/src/pages/Manager.js",["136"],"import RotaMaker from '../components/RotaMaker'\nimport Register from '../components/Register'\nimport './manager.css';\nfunction Manager() {\n    return (\n      <>\n     \n      <div>\n        <h1>Perfil Manager</h1>\n        <p>Esto es el perfil de manager solo accesible por el manager</p>\n        <RotaMaker />\n{/* <Register /> */}\n\n      </div>\n      \n      </>\n    );\n  }\n  \n  export default Manager;\n  ","/home/pablo/Documentos/swapp/src/components/Register.js",["137","138"],"function Register() {\n\n    const RegisterInput = {\n        name: \"\",\n        password: \"\",\n        surname: \"\",\n        email:\"\",   \n    }\n\n    const handlePassword = (e) => {\n        RegisterInput.password = e.target.value\n    }\n    const handleUser = (e) => {\n        RegisterInput.email = e.target.value\n    }\n\n    const handleName = (e) => {\n        RegisterInput.name = e.target.value\n    }\n const submit = (e) => {\n     e.preventDefault();\n }\n\n  \n    return (\n        <>\n            <h1>Registrar usuario</h1>\n           \n            <div className=\"container\" id=\"registerContainer\">\n                <form>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"usernameRegisterInput\">nombre</label>\n                        <input type=\"text\" className=\"form-control\" onChange={handleName} placeholder=\"nombre\" id=\"usernameRegisterInput\" />\n                    </div>  \n                    <div className=\"form-group mt-4\">\n                        <label for=\"surnameRegisterInput\">Apellidos</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Apellidos\" id=\"surnameRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"dniRegisterInput\">Dni</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"dniRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"passwordRegisterInput\">Constraseña</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"contraseña\" id=\"passwordRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"emailRegisterInput\">email</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"email\" id=\"emailRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"telephoneRegisterInput\">telefono</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"telephoneRegisterInput\" />\n                    </div>\n                    <button className=\"btn btn-info\" onClick={submit} id=\"sendRegisterButton\">Confirmar</button>\n                </form>\n            </div>\n        </>\n    );\n}\nexport default Register;\n","/home/pablo/Documentos/swapp/src/components/SearchShifts.js",["139"],"import {useState, useEffect} from 'react';\n\nfunction SearchShifts({ setFilteredData , data }) {\n    const [search, setSearch] = useState(\"\");\n\n   const handleSubmit = (e) =>{\n    e.preventDefault();\n\n    setSearch(\"\");\n   }\n   useEffect(() => {\n    const results = data.filter(data =>\n      data.branch.toLowerCase().includes(search)\n    );\n    setFilteredData(results);\n  }, [search]);\n    return (\n      <>\n     \n      <div className=\"container\">\n\n      <form onSubmit={handleSubmit}>\n      \n     <input type=\"text\"\n     className=\"form-control col-4\" \n     placeholder=\"introduce el restaurante donde buscar turnos\" \n     value={search} onChange ={ (e) => {setSearch(e.target.value)}} />\n     <input type=\"submit\" value=\"busca\"/>\n    </form>\n      </div>\n     \n      </>\n    );\n  }\n  \n  export default SearchShifts;","/home/pablo/Documentos/swapp/src/components/ChatWindow.js",[],"/home/pablo/Documentos/swapp/src/pages/LoginPage.js",["140"],"import './loginpage.css';\nimport Login from '../components/Login';\nimport {useState} from 'react'\n\nfunction LoginPage() {\n    return (\n      <>\n     <Login  />\n      </>\n    );\n  }\n  \n  export default LoginPage;","/home/pablo/Documentos/swapp/src/context/GlobalContext.js",[],"/home/pablo/Documentos/swapp/src/context/auth.js",[],"/home/pablo/Documentos/swapp/src/PrivateRoute.js",[],"/home/pablo/Documentos/swapp/src/components/ModalShift.js",[],"/home/pablo/Documentos/swapp/src/pages/Home.js",[],"/home/pablo/Documentos/swapp/src/pages/Pool.js",["141","142"],"import ShiftList from '../components/ShiftList';\nimport SearchShifts from '../components/SearchShifts';\nimport { useEffect, useState } from 'react';\nimport './pool.css';\n\nfunction Pool() {\n  let token = localStorage.getItem(\"token\");\n  const [{ data, error, isLoading }, dispatch] = useState({\n    data: null,\n    error: null,\n    isLoading: true\n  });\n  const[filteredData, setFilteredData]=useState(data);\n\n\n  const URLPOOL = \"http://localhost:8000/shift/pool\";\n\n  useEffect(() => {\n    fetch(URLPOOL, {headers: { Authorization : `Bearer ${token}`}, })\n\n      .then(response => response.json())\n      .then(data => {dispatch({ data, error: null, isLoading: false })\n\n        console.log(data);\n       }\n\n      ).catch(error => {\n        dispatch({ data: null, error, isLoading: false })\n        console.log(\"ha habido un error:\", error)\n      });\n\n\n  }, []);\n\n \n  return (\n    <>\n\n      <div className=\"container\">\n        <p>este es el Pool donde aparecen los turnos que se van a cambiar con otros usuarios</p>\n        {isLoading ? <ShiftList data={filteredData}/> :  <SearchShifts setFilteredData = {setFilteredData} data = {data}/> }\n       \n        <div className=\"container\">\n          <div className=\"row d-flex justify-content-around\">\n            <ShiftList data={filteredData}/>\n          </div>\n        </div>\n         \n      </div>\n    </>\n  );\n}\n\nexport default Pool;\n","/home/pablo/Documentos/swapp/src/components/ShiftList.js",["143","144"],"import swal from 'sweetalert';\nfunction ShiftList({ data}) {\n  if (!data) {\n    return <p>loading...</p>\n  }\n  let token = localStorage.getItem(\"token\");\n  const week = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\n  const URLSHIFT = \"http://localhost:8000/shift/swapping\";\n  \n  const reqOpt = {\n    method: 'PUT',\n    headers: { 'Content-Type' : 'application/json',\n               Authorization : `Bearer ${token}`\n  },\n    body: JSON.stringify({swapping : 0 })\n   \n};\nconst swappingFetch = (id) =>{\n  fetch(`${URLSHIFT}/${id}`,reqOpt)\n  .then(response => response.json())\n  .then(data => {\n    console.log(data.answer);\n    // dispatch({ data, error: null, isLoading: false }); necesito filtrar la data para hacer un pop por el id\n  }\n  ).catch(error => {\n    console.log(\"ha habido un error:\", error)\n  });\n}\n const takeShift= (id) => {\n   \n    swal({\n      title: \"Are you a 100% sure?\",\n      text: \"Once you take the shift, you will have to call your boss to explain it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willSend) => {\n      if (willSend) {\n          \n          swappingFetch(id);\n        swal(\"Boom! thats your shift now!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"are you still looking for more work?!\");\n      }\n    });\n  }\n  return (\n    <>\n      <div className=\"row\">\n       \n\n          {\n            data.map(({ date, worker, branch, shiftType, startShift, endShift, job, id }) => {\n\n              return (\n                <div className=\"\">\n                <div className=\"card text-center mx-2 my-3 \">\n                  <div className= {`card-body ${shiftType == \"morning\" ? \" bg-warning\": \"bg-primary\" }`}>\n                    {/* <h3 className=\"card-title\">id: {id}</h3> */}\n                    {/* <h4 className=\"card-title\">turno de: {job}</h4> */}\n                    <h3 className=\"card-text\"><b>{week[new Date(startShift.date).getDay()]}</b></h3>\n                    <p className=\"card-text\"><b>{startShift.date.slice(5, 10)}</b></p>\n\n                    <h4 className=\"card-text\">{shiftType}</h4>\n                    <h5 className=\"card-text\"> {branch}</h5>\n                    <p className=\"card-text\">from: <b>{startShift.date.slice(11, 16)} - {endShift.date.slice(11, 16)}</b></p>\n\n                    <p className=\"card-text\">Change with: {worker}</p>\n                    <a href=\"#\" className=\"btn btn-primary\"id={id} onClick={()=>takeShift(id)}>me lo quedo</a>\n                  </div>\n                </div>\n                </div>\n              )\n            })\n          }\n        </div>\n \n    </>\n  )\n}\nexport default ShiftList;\n\n\n","/home/pablo/Documentos/swapp/src/components/BodyRota.js",["145","146","147","148"],"import swal from 'sweetalert';\nfunction BodyRota({ data }) {\n    if (!data) {\n      return <p>loading...</p>\n    }\n    let token = localStorage.getItem(\"token\");\n\n    const URLSHIFT = \"http://localhost:8000/shift/swapping\";\n    \n    const reqOpt = {\n      method: 'PUT',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n    },\n      body: JSON.stringify({swapping : 1 })\n     \n  };\n  const swappingFetch= (e) => {\n \n    fetch(`${URLSHIFT}/${e.target.id}`,reqOpt)\n    .then(response => response.json())\n    .then(data => {console.log(data.answer)}\n  \n    ).catch(error => {\n     \n      console.log(\"ha habido un error:\", error)\n    });\n  }\n    const shiftToPool = (e) => {\n       \n        swal({\n            title: \"Are you sure?\",\n            text: \"Once you send it to the pool, you will have to call your boss and explain it to him to recover it!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willSend) => {\n            if (willSend) {\n                /* meter un fetch a http://localhost:8000/shift/swapping/${e.target.id} */\n                swappingFetch(e);\n              swal(\"Boom! way to the pool it goes!\", {\n                icon: \"success\",\n              });\n            } else {\n              swal(\"you will work this shift then!\");\n            }\n          });\n       // e.target.id\n        // setShow(!show);\n\n        //  if (confirm(` confirma que desea deshacerse de este turno ${shift.id}, ${shift.date} `)){\n        //       functionfetchingtoswapping();\n        //       alert(\"perfecto, tu turno ha ido a la piscina de turnos\");\n        //   }\n        //aqui ira una funcion con un fetch para cambiar swapping a true\n    }\n    return(\n        <>\n        <tr>\n            <th className=\"table-dark\">Morning</th>\n            {data.map(shift => {\n\n                if (shift.shiftType == \"morning\") {\n                    return (<td\n                       \n                       \n                         className={shift.swapping ? \"table-warning\" : \"table-success\" }\n                        onClick={(e) => shiftToPool(e)}\n                        id={shift.id} \n                        key={shift.id} >\n                        { (\"0\" + (new Date(shift.startShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(shift.startShift.date).getMinutes())).slice(-2)} /\n                        { (\"0\" + (new Date(shift.endShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(shift.endShift.date).getMinutes())).slice(-2)}\n\n                    </td>)\n                }\n            }\n\n            )}\n        </tr>\n        <tr>\n            <th className=\"table-dark\">Evening</th>\n            {data.map(shift => {\n\n                if (shift.shiftType == \"evening\") {\n                    return (<td\n                        className={shift.swapping ? \"table-warning\" : \"table-success\" }\n                        onClick={(e) => shiftToPool(e)}\n                        id={shift.id} >\n                        { (\"0\" + (new Date(shift.startShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(shift.startShift.date).getMinutes())).slice(-2)} /\n                        { (\"0\" + (new Date(shift.endShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(shift.endShift.date).getMinutes())).slice(-2)}\n\n                    </td>)\n                }\n            }\n\n            )}\n        </tr>\n        </>\n    )\n}\n    export default BodyRota;","/home/pablo/Documentos/swapp/src/components/Weekshifts.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useState, useContext } from 'react';\nfunction Weekshifts({worker, week, setShifts, shifts}) {\n    if (!worker) {\n        return <p>loading...</p>\n      }\n    const shfitType = [\"1\", \"2\"]; /* necesito cambiarlo por 0 y 1 para el back */\n \n    const updateWorkerInDataResponse = (newWorker) =>{\n        return shifts.map( worker=> worker.id==newWorker.id?newWorker:worker)\n    }\nconst updateShiftInWorker = (existingShift , workerObj) =>{\n   \n    workerObj.shifts = workerObj.shifts.map( shift =>{\n       let found = shift.shiftType == existingShift.shiftType\n                && existingShift.date\n                && typeof shift.date == \"string\"\n                && shift.date.substring(0, 10) == existingShift.date.substring(0, 10) \n                ;\n     \n       return found ? existingShift : shift\n    })\n\n    return workerObj\n}\nconst existAnyShift = (workerObj,type,datestr) =>{\n    let existingShift = workerObj.shifts.find(shift => \n        shift.shiftType == type\n     && typeof shift.date ==\"string\" \n     && shift.date.substring(0, 10) == datestr);\n     return existingShift;\n}\nconst existEndShift = (workerObj,type,datestr) =>{\n    let existingEndShift = workerObj.shifts.find(shift => \n        shift.shiftType == type \n        && typeof shift.endShift ==\"string\" \n        && shift.endShift.substring(0, 10) == datestr);\n         return existingEndShift;\n}\n    const existStartShift = (workerObj,type,datestr) =>{\n        let existingStartShift = workerObj.shifts?.find(shift => \n            shift.shiftType == type\n             && typeof shift.date == \"string\" \n             && shift.date.substring(0, 10) == datestr); \n        return existingStartShift;\n    }\n\n    const toggleInput = (e, type, datestr, wid) =>{\n            let inputsTarget = e.currentTarget.firstChild;\n            console.log(inputsTarget);\n            let workerObj = shifts.find(w =>{return w.id == wid }); \n            let existingShift = existAnyShift(workerObj,type,datestr);\n                \n            if (existingShift && existingShift.active == false){\n              \n                existingShift = {shiftType: type, date : datestr, startShift: (datestr +\" \"+ inputsTarget.firstChild.value), endShift: (datestr +\" \"+ inputsTarget.lastChild.value), active : true };\n             \n                                \n                workerObj = updateShiftInWorker(existingShift, workerObj);\n            }\n           else if(existingShift){\n               \n                existingShift = {shiftType: type, date : datestr, active : false };\n                \n                workerObj = updateShiftInWorker(existingShift, workerObj);\n    \n            }else{\n                workerObj.shifts.push({\n                    date : datestr,\n                    shiftType: type,\n                    active : false\n                })\n            }\n            let newDataResponse = updateWorkerInDataResponse(workerObj)\n            \n            setShifts(newDataResponse);\n         \n\n    }\n    \n\n    const getStartValue= (e, type, datestr, wid) =>{\n      \n        if(!e.target.value){return;}\n        \n        let workerObj = shifts.find(w =>{return w.id==wid }); \n        let existingEndShift = existEndShift(workerObj,type,datestr);\n        let existingStartShift = existStartShift(workerObj,type,datestr);\n        if(existingEndShift){\n\n            existingEndShift = {...existingEndShift, startShift: (datestr +\" \"+ e.target.value), active : true }\n            workerObj = updateShiftInWorker(existingEndShift, workerObj);\n          \n        }else if (existingStartShift){\n            existingStartShift = {...existingStartShift, startShift:  (datestr +\" \"+ e.target.value) }\n            workerObj = updateShiftInWorker(existingStartShift, workerObj);\n          \n            } else{\n            workerObj.shifts.push({\n                date : datestr,\n                shiftType: type,\n                startShift: (datestr+\" \"+ e.target.value),\n            })\n        }\n        let newDataResponse = updateWorkerInDataResponse( workerObj)\n        \n        setShifts(newDataResponse);\n     \n   \n    }\n\n    const getEndValue= (e, type, datestr, wid) =>{\n       \n        if(!e.target.value) {\n            return;\n        }\n        \n        let workerObj = shifts.find(w =>{return w.id==wid });\n\n        let existingEndShift = existEndShift(workerObj,type,datestr);\n        let existingStartShift = existStartShift(workerObj,type, datestr);\n\n        if(existingStartShift){\n\n            existingStartShift = {...existingStartShift, endShift:  (datestr +\" \"+ e.target.value), active : true }\n            workerObj = updateShiftInWorker(existingStartShift, workerObj);\n        }else if (existingEndShift){\n            existingEndShift = {...existingEndShift, endShift:  (datestr +\" \"+ e.target.value) }\n            workerObj = updateShiftInWorker(existingEndShift, workerObj);\n          \n            \n        }else{\n            workerObj.shifts.push({\n                shiftType: type,\n                endShift:  (datestr +\" \"+ e.target.value)\n            })\n        }\n        let newDataResponse = updateWorkerInDataResponse( workerObj)\n        // console.log({workerObj, newDataResponse});\n        setShifts(newDataResponse);\n     \n  \n    }\n \n\n    return (\n        <>\n            {shfitType.map((type) => {\n                let cabecera = \"\";\n                let wid = worker.id;\n             \n                if (type == \"1\") { /* para poner cabecera con nombre en mañana y tarde por rowspan */\n                    cabecera = <th className=\"table-dark\" rowspan=\"2\" id={worker.id} >{worker.id}, {worker.worker}</th>;\n                }\n                return (\n                    <tr> \n                       \n                        { cabecera}\n                        {week.map((day, index) => {\n                            let datestr = day.toISOString().slice(0, 10);\n                         \n                                    /* si tiene shifts en los datos que el back nos devuelve: */\n                                \n                                let conditionShift = worker.shifts.find(shift => shift.shiftType == type && typeof shift.startShift !== \"string\" && shift.startShift && new Date(shift.startShift.date).toISOString().slice(0, 10) == datestr);\n                                    /* condicion para saber si hay datos de la base de datos para rango de (mañ/tard) que estemos y la fecha en el trabajador en el que estamos */\n                                let conditionActive  =  worker.shifts.find(shift => shift.shiftType == type && typeof shift.date == \"string\" && shift.date.substring(0, 10) == datestr);\n                                \n                                if (conditionShift) {\n                                    \n                                    return (<>\n                                        <td data-shiftid={conditionShift.id}>\n                                            \n                                            {(\"0\" + (new Date(conditionShift.startShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(conditionShift.startShift.date).getMinutes())).slice(-2)} /\n                                            {(\"0\" + (new Date(conditionShift.endShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(conditionShift.endShift.date).getMinutes())).slice(-2)}\n\n                                        </td>\n                                    </>)\n\n                                } else {\n                                           \n                                    return (<>\n                                        <td data-shiftType={type} data-date={datestr} data-wid={wid} id={index} onDoubleClick={(e)=>{toggleInput(e, type, datestr, wid)}}>\n                                       \n                                           \n                                            <div  className={conditionActive ? (conditionActive.active === false ? \"hide\":\"\"):\"\"}>\n                                                <input data-shift=\"startShift\"type=\"time\"required onBlur={(e) => { getStartValue(e, type, datestr, wid) }} />\n                                                <input data-shift=\"endShift\" type=\"time\" required onBlur={(e) => { getEndValue(e, type, datestr, wid) }} />\n                                            </div > \n                                           <div className={conditionActive ? conditionActive.active === false ? \"\":\"hide\":\"hide\"}>\n                                               <p>OFF</p>\n                                           </div>\n                                           \n                                            \n                                        </td> \n                                    </>)\n                                }\n                          \n                        })}\n                    </tr>\n                )\n            }\n\n            )\n            }\n        </>\n    );\n}\n\nexport default Weekshifts;\n","/home/pablo/Documentos/swapp/src/components/ChatList.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"177","line":2,"column":32,"nodeType":"175","messageId":"176","endLine":2,"endColumn":38},{"ruleId":"173","severity":1,"message":"178","line":3,"column":9,"nodeType":"175","messageId":"176","endLine":3,"endColumn":22},{"ruleId":"173","severity":1,"message":"179","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":34,"column":55,"nodeType":"182","messageId":"183","endLine":34,"endColumn":57},{"ruleId":"180","severity":1,"message":"181","line":42,"column":55,"nodeType":"182","messageId":"183","endLine":42,"endColumn":57},{"ruleId":"173","severity":1,"message":"184","line":2,"column":9,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"185","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"174","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":20},{"ruleId":"173","severity":1,"message":"178","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":23},{"ruleId":"173","severity":1,"message":"186","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":18},{"ruleId":"173","severity":1,"message":"187","line":4,"column":9,"nodeType":"175","messageId":"176","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"188","line":4,"column":19,"nodeType":"175","messageId":"176","endLine":4,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":12,"column":19,"nodeType":"191","messageId":"192","endLine":12,"endColumn":27,"fix":"193"},{"ruleId":"194","severity":1,"message":"195","line":44,"column":23,"nodeType":"196","messageId":"197","endLine":44,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":56,"column":23,"nodeType":"196","messageId":"197","endLine":56,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":72,"column":27,"nodeType":"182","messageId":"183","endLine":72,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":82,"column":8,"nodeType":"200","endLine":82,"endColumn":14,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"203","line":7,"column":11,"nodeType":"175","messageId":"176","endLine":7,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":9,"column":19,"nodeType":"191","messageId":"192","endLine":9,"endColumn":27,"fix":"204"},{"ruleId":"198","severity":1,"message":"205","line":60,"column":4,"nodeType":"200","endLine":60,"endColumn":10,"suggestions":"206"},{"ruleId":"194","severity":1,"message":"195","line":72,"column":18,"nodeType":"196","messageId":"197","endLine":72,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":84,"column":19,"nodeType":"196","messageId":"197","endLine":84,"endColumn":21},{"ruleId":"173","severity":1,"message":"207","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"208","line":10,"column":11,"nodeType":"175","messageId":"176","endLine":10,"endColumn":25},{"ruleId":"173","severity":1,"message":"209","line":13,"column":11,"nodeType":"175","messageId":"176","endLine":13,"endColumn":21},{"ruleId":"198","severity":1,"message":"210","line":16,"column":6,"nodeType":"200","endLine":16,"endColumn":14,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"212","line":3,"column":9,"nodeType":"175","messageId":"176","endLine":3,"endColumn":17},{"ruleId":"173","severity":1,"message":"213","line":8,"column":18,"nodeType":"175","messageId":"176","endLine":8,"endColumn":23},{"ruleId":"198","severity":1,"message":"214","line":33,"column":6,"nodeType":"200","endLine":33,"endColumn":8,"suggestions":"215"},{"ruleId":"180","severity":1,"message":"181","line":61,"column":59,"nodeType":"182","messageId":"183","endLine":61,"endColumn":61},{"ruleId":"216","severity":1,"message":"217","line":72,"column":21,"nodeType":"218","endLine":72,"endColumn":96},{"ruleId":"194","severity":1,"message":"219","line":62,"column":29,"nodeType":"196","messageId":"220","endLine":62,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":64,"column":37,"nodeType":"182","messageId":"183","endLine":64,"endColumn":39},{"ruleId":"194","severity":1,"message":"219","line":83,"column":29,"nodeType":"196","messageId":"220","endLine":83,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":85,"column":37,"nodeType":"182","messageId":"183","endLine":85,"endColumn":39},{"ruleId":"173","severity":1,"message":"212","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":9,"column":46,"nodeType":"182","messageId":"183","endLine":9,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":14,"column":36,"nodeType":"182","messageId":"183","endLine":14,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":17,"column":48,"nodeType":"182","messageId":"183","endLine":17,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":27,"column":25,"nodeType":"182","messageId":"183","endLine":27,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":29,"column":37,"nodeType":"182","messageId":"183","endLine":29,"endColumn":39},{"ruleId":"180","severity":1,"message":"181","line":34,"column":25,"nodeType":"182","messageId":"183","endLine":34,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":36,"column":44,"nodeType":"182","messageId":"183","endLine":36,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":41,"column":29,"nodeType":"182","messageId":"183","endLine":41,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":43,"column":45,"nodeType":"182","messageId":"183","endLine":43,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":50,"column":58,"nodeType":"182","messageId":"183","endLine":50,"endColumn":60},{"ruleId":"180","severity":1,"message":"181","line":53,"column":55,"nodeType":"182","messageId":"183","endLine":53,"endColumn":57},{"ruleId":"180","severity":1,"message":"181","line":85,"column":53,"nodeType":"182","messageId":"183","endLine":85,"endColumn":55},{"ruleId":"180","severity":1,"message":"181","line":117,"column":53,"nodeType":"182","messageId":"183","endLine":117,"endColumn":55},{"ruleId":"180","severity":1,"message":"181","line":151,"column":26,"nodeType":"182","messageId":"183","endLine":151,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":163,"column":98,"nodeType":"182","messageId":"183","endLine":163,"endColumn":100},{"ruleId":"180","severity":1,"message":"181","line":163,"column":228,"nodeType":"182","messageId":"183","endLine":163,"endColumn":230},{"ruleId":"180","severity":1,"message":"181","line":165,"column":101,"nodeType":"182","messageId":"183","endLine":165,"endColumn":103},{"ruleId":"180","severity":1,"message":"181","line":165,"column":173,"nodeType":"182","messageId":"183","endLine":165,"endColumn":175},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'GlobalContext' is defined but never used.","'ChatWindow' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useAuth' is defined but never used.","'jwt_decode' is defined but never used.","'ModalShift' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"223","text":"224"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reqOpt'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'ReactDOM' is defined but never used.","'shfitType' is assigned a value but never used.",{"range":"226","text":"224"},"React Hook useEffect has a missing dependency: 'getDataWeek'. Either include it or remove the dependency array.",["227"],"'Register' is defined but never used.","'handlePassword' is assigned a value but never used.","'handleUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'setFilteredData'. Either include them or remove the dependency array. If 'setFilteredData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["228"],"'useState' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["229"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",[530,530],"()",{"desc":"230","fix":"231"},[5633,5633],{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [reqOpt, week]",{"range":"238","text":"239"},"Update the dependencies array to be: [getDataWeek, week]",{"range":"240","text":"241"},"Update the dependencies array to be: [data, search, setFilteredData]",{"range":"242","text":"243"},"Update the dependencies array to be: [token]",{"range":"244","text":"245"},[2802,2808],"[reqOpt, week]",[6870,6876],"[getDataWeek, week]",[376,384],"[data, search, setFilteredData]",[856,858],"[token]"]