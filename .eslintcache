[{"/home/pablo/Documentos/swapp/src/index.js":"1","/home/pablo/Documentos/swapp/src/App.js":"2","/home/pablo/Documentos/swapp/src/components/Navbar.js":"3","/home/pablo/Documentos/swapp/src/pages/Index.js":"4","/home/pablo/Documentos/swapp/src/pages/Profile.js":"5","/home/pablo/Documentos/swapp/src/components/Login.js":"6","/home/pablo/Documentos/swapp/src/components/Rota.js":"7","/home/pablo/Documentos/swapp/src/pages/Chat.js":"8","/home/pablo/Documentos/swapp/src/components/RotaMaker.js":"9","/home/pablo/Documentos/swapp/src/pages/Manager.js":"10","/home/pablo/Documentos/swapp/src/components/Register.js":"11","/home/pablo/Documentos/swapp/src/pages/pool.js":"12","/home/pablo/Documentos/swapp/src/components/SearchShifts.js":"13","/home/pablo/Documentos/swapp/src/components/ListShifts.js":"14","/home/pablo/Documentos/swapp/src/components/ChatWindow.js":"15","/home/pablo/Documentos/swapp/src/pages/LoginPage.js":"16"},{"size":268,"mtime":1614521473322,"results":"17","hashOfConfig":"18"},{"size":735,"mtime":1614856860532,"results":"19","hashOfConfig":"18"},{"size":1414,"mtime":1613068252521,"results":"20","hashOfConfig":"18"},{"size":227,"mtime":1614517620537,"results":"21","hashOfConfig":"18"},{"size":251,"mtime":1614517695213,"results":"22","hashOfConfig":"18"},{"size":1953,"mtime":1614863867031,"results":"23","hashOfConfig":"18"},{"size":2364,"mtime":1612879450408,"results":"24","hashOfConfig":"18"},{"size":252,"mtime":1614517574317,"results":"25","hashOfConfig":"18"},{"size":5881,"mtime":1614691766799,"results":"26","hashOfConfig":"18"},{"size":392,"mtime":1614517665705,"results":"27","hashOfConfig":"18"},{"size":2486,"mtime":1612973871668,"results":"28","hashOfConfig":"18"},{"size":409,"mtime":1614517681045,"results":"29","hashOfConfig":"18"},{"size":575,"mtime":1613068608130,"results":"30","hashOfConfig":"18"},{"size":215,"mtime":1613069600731,"results":"31","hashOfConfig":"18"},{"size":267,"mtime":1614691302427,"results":"32","hashOfConfig":"18"},{"size":179,"mtime":1614597024028,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1nxl4n5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/pablo/Documentos/swapp/src/index.js",[],["71","72"],"/home/pablo/Documentos/swapp/src/App.js",[],"/home/pablo/Documentos/swapp/src/components/Navbar.js",[],"/home/pablo/Documentos/swapp/src/pages/Index.js",["73"],"import Login from '../components/Login';\nimport './index.css';\nfunction Indice() {\n    return (\n      <>\n     \n      <div>\n       <p>hola este es el indice</p>\n      </div>\n  \n      </>\n    );\n  }\n  \n  export default Indice;\n  ","/home/pablo/Documentos/swapp/src/pages/Profile.js",[],"/home/pablo/Documentos/swapp/src/components/Login.js",[],"/home/pablo/Documentos/swapp/src/components/Rota.js",[],"/home/pablo/Documentos/swapp/src/pages/Chat.js",[],"/home/pablo/Documentos/swapp/src/components/RotaMaker.js",["74","75","76","77","78"],"import { useState } from \"react\";\nfunction RotaMaker() {\n    // const week = [\"#\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Friday\",\"Saturday\",\"Sunday\"];\n    const workers = [{ name: \"pablo\", id: 1 }, { name: \"ana\", id: 2 }, { name: \"pepe\", id: 3 }];\n    const data = {\n        \"data\": [\n            {\n                \"name\": \"Pablo\",\n                \"shifts\": [\n                    {\n                        \"shift_id\": 1,\n                        \"shift_type\": \"MORNING\",\n                        \"start_shift\": \"2021-02-10 10:01\",\n                        \"end_shift\": \"2021-02-10 12:01\"\n                    },\n                    {\n                        \"shift_id\": 2,\n                        \"shift_type\": \"EVENING\",\n                        \"start_shift\": \"2021-02-10 16:01\",\n                        \"end_shift\": \"2021-02-10 20:01\"\n                    },\n                    {\n                        \"shift_id\": 3,\n                        \"shift_type\": \"EVENING\",\n                        \"start_shift\": \"2021-02-11 16:02\",\n                        \"end_shift\": \"2021-02-11 20:02\"\n                    },\n                    {\n                        \"shift_id\": 4,\n                        \"shift_type\": \"OFF\",\n                        \"start_shift\": \"2021-02-12\",\n                        \"end_shift\": \"2021-02-12\"\n                    },\n                    {\n                        \"shift_id\": 5,\n                        \"shift_type\": \"EVENING\",\n                        \"start_shift\": \"2021-02-13 18:00\",\n                        \"end_shift\": \"2021-02-13 20:00\"\n                    },\n                    {\n                        \"shift_id\": 6,\n                        \"shift_type\": \"OFF\",\n                        \"start_shift\": \"2021-02-14\",\n                        \"end_shift\": \"2021-02-14\"\n                    },\n                    {\n                        \"shift_id\": 7,\n                        \"shift_type\": \"MORNING\",\n                        \"start_shift\": \"2021-02-15 10:00\",\n                        \"end_shift\": \"2021-02-15 12:00\"\n                    },\n                    {\n                        \"shift_id\": 8,\n                        \"shift_type\": \"EVENING\",\n                        \"start_shift\": \"2021-02-15 10:00\",\n                        \"end_shift\": \"2021-02-15 12:00\"\n                    },\n                    {\n                        \"shift_id\": 9,\n                        \"shift_type\": \"EVENING\",\n                        \"start_shift\": \"2021-02-16 16:00\",\n                        \"end_shift\": \"2021-02-16 20:00\"\n                    },\n                    {\n                        \"shift_id\": 10,\n                        \"shift_type\": \"OFF\",\n                        \"start_shift\": \"2021-02-12\",\n                        \"end_shift\": \"2021-02-12\"\n                    }\n                ]\n            }\n        ]\n    };\n\n    // const workersTable = data.data.map(worker =>\n    //     <>\n    //     <tr>\n    //         <th rowspan=\"2\" scope=\"rowgroup\" className=\"table-warning\">{worker.name}</th>\n    //         {worker.shifts.map( )}\n             \n    //     </tr>\n         \n    //     </>\n    // )\n    const shifts = [{ worker_id: 1, }, {}, {}];\n    const [shift, setShift] = useState(\"\");\n\n    const handleshift = (e) => {\n\n        setShift(e.target.value);\n    }\n\n    const body = data.data.map(worker =>\n        <>\n        <tr>\n            <th rowspan=\"2\" scope=\"rowgroup\" className=\"table-warning\">{worker.name}</th>\n            {worker.shifts.map(shift =>\n                (shift.shift_type == \"MORNING\")?\n                <td key={shift.shift_id} className=\"table-success\" >\n\n                    <p>{shift.start_shift.substr(11, 5)}~{shift.end_shift.substr(11, 5)}</p>\n\n                </td>\n                :\n                <td key={shift.shift_id} className=\"table-success\" >\n\n                <p></p>\n\n            </td>\n            )}\n            </tr>\n         \n            </>\n\n            /*\n             <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n                   <input type=\"text\" onChange={handleshift} placeholder={shift.start_shift.substr(11,5)} className=\"col-6\" />\n                <input type=\"text\" onChange={handleshift} placeholder={shift.end_shift.substr(11,5)} className=\"col-6\" />\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n            </td>\n            <td className=\"table-success\" >\n                <input type=\"text\" onChange={handleshift} className=\"col\" />\n            </td> */\n\n\n       \n    )\n\n    return (\n\n        <table className=\"table table-hover\">\n\n            <thead className=\"table-dark\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">{data.data[0].shifts[0].start_shift.substr(5, 5)}</th>\n                    <th scope=\"col\">Tuesday</th>\n                    <th scope=\"col\">Wednesday</th>\n                    <th scope=\"col\">Thursday</th>\n                    <th scope=\"col\">Friday</th>\n                    <th scope=\"col\">Saturday</th>\n                    <th scope=\"col\">Sunday</th>\n                </tr>\n            </thead>\n            <tbody>\n\n                {body}\n\n\n\n            </tbody>\n\n\n\n        </table>\n    )\n}\n\nexport default RotaMaker;","/home/pablo/Documentos/swapp/src/pages/Manager.js",["79"],"import RotaMaker from '../components/RotaMaker'\nimport Register from '../components/Register'\nimport './manager.css';\nfunction Manager() {\n    return (\n      <>\n     \n      <div>\n        <h1>Perfil Manager</h1>\n       <p>Esto es el perfil de manager solo accesible por el manager</p>\n<RotaMaker />\n{/* <Register /> */}\n\n      </div>\n      \n      </>\n    );\n  }\n  \n  export default Manager;\n  ","/home/pablo/Documentos/swapp/src/components/Register.js",["80","81"],"function Register() {\n\n    const RegisterInput = {\n        name: \"\",\n        password: \"\",\n        surname: \"\",\n        email:\"\",   \n    }\n\n    const handlePassword = (e) => {\n        RegisterInput.password = e.target.value\n    }\n    const handleUser = (e) => {\n        RegisterInput.email = e.target.value\n    }\n\n    const handleName = (e) => {\n        RegisterInput.name = e.target.value\n    }\n const submit = (e) => {\n     e.preventDefault();\n }\n\n  \n    return (\n        <>\n            <h1>Registrar usuario</h1>\n           \n            <div className=\"container\" id=\"registerContainer\">\n                <form>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"usernameRegisterInput\">nombre</label>\n                        <input type=\"text\" className=\"form-control\" onChange={handleName} placeholder=\"nombre\" id=\"usernameRegisterInput\" />\n                    </div>  \n                    <div className=\"form-group mt-4\">\n                        <label for=\"surnameRegisterInput\">Apellidos</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Apellidos\" id=\"surnameRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"dniRegisterInput\">Dni</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"dniRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"passwordRegisterInput\">Constraseña</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"contraseña\" id=\"passwordRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"emailRegisterInput\">email</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"email\" id=\"emailRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"telephoneRegisterInput\">telefono</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"telephoneRegisterInput\" />\n                    </div>\n                    <button className=\"btn btn-info\" onClick={submit} id=\"sendRegisterButton\">Confirmar</button>\n                </form>\n            </div>\n        </>\n    );\n}\nexport default Register;\n","/home/pablo/Documentos/swapp/src/pages/pool.js",[],"/home/pablo/Documentos/swapp/src/components/SearchShifts.js",[],"/home/pablo/Documentos/swapp/src/components/ListShifts.js",[],"/home/pablo/Documentos/swapp/src/components/ChatWindow.js",[],"/home/pablo/Documentos/swapp/src/pages/LoginPage.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":4,"column":11,"nodeType":"88","messageId":"89","endLine":4,"endColumn":18},{"ruleId":"86","severity":1,"message":"91","line":85,"column":11,"nodeType":"88","messageId":"89","endLine":85,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":86,"column":12,"nodeType":"88","messageId":"89","endLine":86,"endColumn":17},{"ruleId":"86","severity":1,"message":"93","line":88,"column":11,"nodeType":"88","messageId":"89","endLine":88,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":98,"column":35,"nodeType":"96","messageId":"97","endLine":98,"endColumn":37},{"ruleId":"86","severity":1,"message":"98","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"99","line":10,"column":11,"nodeType":"88","messageId":"89","endLine":10,"endColumn":25},{"ruleId":"86","severity":1,"message":"100","line":13,"column":11,"nodeType":"88","messageId":"89","endLine":13,"endColumn":21},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'workers' is assigned a value but never used.","'shifts' is assigned a value but never used.","'shift' is assigned a value but never used.","'handleshift' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Register' is defined but never used.","'handlePassword' is assigned a value but never used.","'handleUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]