[{"/home/pablo/Documentos/swapp/src/index.js":"1","/home/pablo/Documentos/swapp/src/App.js":"2","/home/pablo/Documentos/swapp/src/components/Navbar.js":"3","/home/pablo/Documentos/swapp/src/pages/Index.js":"4","/home/pablo/Documentos/swapp/src/pages/Profile.js":"5","/home/pablo/Documentos/swapp/src/components/Login.js":"6","/home/pablo/Documentos/swapp/src/components/Rota.js":"7","/home/pablo/Documentos/swapp/src/pages/Chat.js":"8","/home/pablo/Documentos/swapp/src/components/RotaMaker.js":"9","/home/pablo/Documentos/swapp/src/pages/Manager.js":"10","/home/pablo/Documentos/swapp/src/components/Register.js":"11","/home/pablo/Documentos/swapp/src/components/SearchShifts.js":"12","/home/pablo/Documentos/swapp/src/components/ChatWindow.js":"13","/home/pablo/Documentos/swapp/src/pages/LoginPage.js":"14","/home/pablo/Documentos/swapp/src/context/GlobalContext.js":"15","/home/pablo/Documentos/swapp/src/context/auth.js":"16","/home/pablo/Documentos/swapp/src/PrivateRoute.js":"17","/home/pablo/Documentos/swapp/src/components/ModalShift.js":"18","/home/pablo/Documentos/swapp/src/pages/Home.js":"19","/home/pablo/Documentos/swapp/src/pages/Pool.js":"20","/home/pablo/Documentos/swapp/src/components/ShiftList.js":"21","/home/pablo/Documentos/swapp/src/components/BodyRota.js":"22","/home/pablo/Documentos/swapp/src/components/Weekshifts.js":"23","/home/pablo/Documentos/swapp/src/components/ChatList.js":"24","/home/pablo/Documentos/swapp/src/pages/NoMatch.js":"25","/home/pablo/Documentos/swapp/src/components/Footer.js":"26"},{"size":264,"mtime":1617047522664,"results":"27","hashOfConfig":"28"},{"size":2081,"mtime":1617622749898,"results":"29","hashOfConfig":"28"},{"size":1899,"mtime":1617709077846,"results":"30","hashOfConfig":"28"},{"size":1126,"mtime":1617704251711,"results":"31","hashOfConfig":"28"},{"size":277,"mtime":1617562465379,"results":"32","hashOfConfig":"28"},{"size":2557,"mtime":1617126841262,"results":"33","hashOfConfig":"28"},{"size":4442,"mtime":1617623829224,"results":"34","hashOfConfig":"28"},{"size":520,"mtime":1616678328753,"results":"35","hashOfConfig":"28"},{"size":6435,"mtime":1617633438168,"results":"36","hashOfConfig":"28"},{"size":312,"mtime":1617471917027,"results":"37","hashOfConfig":"28"},{"size":2486,"mtime":1612973871668,"results":"38","hashOfConfig":"28"},{"size":1497,"mtime":1617706105826,"results":"39","hashOfConfig":"28"},{"size":438,"mtime":1616678273601,"results":"40","hashOfConfig":"28"},{"size":211,"mtime":1615127036307,"results":"41","hashOfConfig":"28"},{"size":88,"mtime":1615134637381,"results":"42","hashOfConfig":"28"},{"size":166,"mtime":1615205870573,"results":"43","hashOfConfig":"28"},{"size":406,"mtime":1615287503409,"results":"44","hashOfConfig":"28"},{"size":372,"mtime":1615306883827,"results":"45","hashOfConfig":"28"},{"size":262,"mtime":1616570926265,"results":"46","hashOfConfig":"28"},{"size":2034,"mtime":1617745361241,"results":"47","hashOfConfig":"28"},{"size":2581,"mtime":1617745437425,"results":"48","hashOfConfig":"28"},{"size":3323,"mtime":1617742284059,"results":"49","hashOfConfig":"28"},{"size":9000,"mtime":1617632067903,"results":"50","hashOfConfig":"28"},{"size":362,"mtime":1616678355113,"results":"51","hashOfConfig":"28"},{"size":344,"mtime":1617126621840,"results":"52","hashOfConfig":"28"},{"size":380,"mtime":1617562728811,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1nxl4n5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/pablo/Documentos/swapp/src/index.js",[],["119","120"],"/home/pablo/Documentos/swapp/src/App.js",["121","122","123","124","125","126"],"import React, { useState, useContext } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {AuthContext} from './context/auth';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Index from './pages/Index';\nimport jwt_decode from \"jwt-decode\";\nimport Profile from './pages/Profile';\nimport Rota from \"./components/Rota\";\nimport Manager from './pages/Manager';\nimport Pool from './pages/Pool';\n\nimport NoMatch from './pages/NoMatch';\nimport LoginPage from './pages/LoginPage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n\n  const tokenStored = localStorage.getItem(\"token\");\n\n   const [authTokens, setAuthTokens] = useState(tokenStored);\n   const setTokens = (data) =>{\n     localStorage.setItem(\"token\", data);\n     setAuthTokens(data);\n   }\n   const boss = () => {\n    if (tokenStored){\n\n        const userLogged = jwt_decode(tokenStored);\n        const boss = userLogged.roles.find(rol => rol == \"ROLE_MANAGER\");\n      \n        if (boss) return true;\n}}\nconst logged = () => {\n    if (tokenStored){\n\n        const userLogged = jwt_decode(tokenStored);\n        const user = userLogged.roles.find(rol => rol == \"ROLE_USER\");\n        if (user) return true;\n}}\n\n\nconst logout = ()=> {\n    localStorage.removeItem(\"token\");\n    setAuthTokens(\"\");\n}\n\n     return (\n      <>\n    <AuthContext.Provider value={{authTokens, setAuthTokens: setTokens}}>\n    <BrowserRouter>\n        {(logged())? <Navbar boss={boss} logged={logged} logout={logout}/> : \"\"}\n      <div className = \"min-view\">\n\n        <Route exact path=\"/\" component={Index} />\n        <Route  path=\"/Pool\" component={Pool} />\n        <Route  path=\"/profile\" component={Profile} />\n        <Route  path=\"/profile/rota\" component={Rota} />\n        <PrivateRoute  path=\"/manager\" component={Manager} /> \n        <Route  path=\"/login\" component={LoginPage} />\n   \n       \n      </div>\n    </BrowserRouter>\n     </AuthContext.Provider>\n     {/* {(logged())? <Footer/> : \"\"} */}\n      </>\n    );\n  }\n\nexport default App;\n","/home/pablo/Documentos/swapp/src/components/Navbar.js",["127","128"],"import { NavLink, Link } from 'react-router-dom'\nimport {useAuth} from '../context/auth';\nimport jwt_decode from \"jwt-decode\";\n\nfunction Navbar({boss, logged, logout}) {\n    const userLogged = jwt_decode(localStorage.getItem(\"token\"));\n\n    return (\n        <>\n        {console.log(userLogged)}\n        <nav className=\"\">\n                <div className=\"\">\n                    <ul className=\"navbar-nav bd-navbar-nav flex-row bg-dark align-items-center  \">\n                        {/* <li className=\"nav-item m-2\"><NavLink to=\"/home\">Inicio</NavLink></li> */}\n                        {/* <li className=\"nav-item m-2\"><NavLink to=\"/chat\">Chat</NavLink></li> */}\n                      \n                        {(logged())? <li className=\"nav-item\"><NavLink to=\"/\"> <h1 className=\"logo\"></h1></NavLink></li>: \"\"}\n                        {(boss())  ? <li className=\"nav-item m-3\"><NavLink to=\"/manager\">Manager</NavLink></li> : \"\"} \n                        {(logged())? <li className=\"nav-item m-3\"><NavLink to=\"/profile\">User Profile</NavLink></li> : \"\"}\n                        {(logged())? <li className=\"nav-item m-3\"><NavLink className=\"\"  to=\"/Pool\"><i className=\"fas fa-search\"></i>Search Shifts</NavLink></li>: \"\"}\n                       \n                           <div className=\"nav-user-picture ml-auto\"></div>\n                       <div className=\" nav-user\">\n                       \t{(logged())? <li className=\"nav-item m-3\"><h6>{userLogged.username}</h6></li>:\"\"}\n                       </div>\n                       <div className=\"\">\n                       {(logged())? \"\" : <li className=\"nav-item m-3\"><NavLink to=\"/login\">Login</NavLink></li>}\n                       {(logged())? <li className=\"nav-item m-3\"><Link onClick={()=>logout()} to= \"/\">Logut</Link></li> : \"\"}</div>\n\n                    </ul>\n                </div>\n        </nav>\n    </>\n    );\n}\n\nexport default Navbar;\n","/home/pablo/Documentos/swapp/src/pages/Index.js",[],"/home/pablo/Documentos/swapp/src/pages/Profile.js",["129","130"],"import Rota from '../components/Rota'\nimport { NavLink, useRouteMatch } from 'react-router-dom'\nimport './profile.css';\n\nfunction Profile() {\n const { url } = useRouteMatch();\n    return (\n      <>\n      <Rota />\n    \n      \n      </>\n    );\n  }\n  \n  export default Profile;\n  ","/home/pablo/Documentos/swapp/src/components/Login.js",["131","132"],"import { useContext,useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport {Redirect} from 'react-router-dom';\nimport {useAuth} from '../context/auth'\n\nfunction Login() {\n    // const {isloged, setIsloged} = useContext(GlobalContext);\n    const [isloged, setIsloged] = useState(false);\nconst {setAuthTokens} = useAuth();\n\n    const loginInput = {\n        username: \"\", \n        password: \"\"\n    }\n\n\n    const handlePassword = (e) => {\n        loginInput.password = e.target.value\n    }\n    const handleUser = (e) => {\n        loginInput.username = e.target.value\n    }\n\n    const URLLOGIN = \"http://localhost:8000/login\";\n\n    const login = (e) => {\n        // funtcion to log into Swapp\n        e.preventDefault();\n       // alert(`tu usuario ${loginInput.username} y contraseña ${loginInput.password} `);\n\n        fetch(URLLOGIN, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(loginInput)\n        }).then(response => response.json())\n            .then(data => {\n\n                if (data.token){\n                    setAuthTokens(data.token)\n                   \n                     setIsloged(true);\n                }\n              \n              \n               \n            }).catch(error => console.log(\"ha habido un error:\", error));\n\n    }\n    if (isloged){\n         return <Redirect to=\"/profile\"/>\n    }\n\n    return (\n        <>\n            <div className=\"loginback\">\n\n\n                <div className=\"loginContainer\" id=\"loginContainer\">\n                    <h1>Inicio de sesión</h1>\n                    <form>\n                        <div className=\"form-group form \">\n                            <label htmlFor=\"emailLoginInput\">Email</label>\n                            <input type=\"text\" onChange={handleUser} className=\"form-control col-6 \" placeholder=\"introduce el Email\" id=\"emailLoginInput\" />\n                        </div>\n                        <div className=\"form-group form \">\n                            <label htmlfor=\"passwordLoginInput\">Constraseña</label>\n                            <input type=\"password\" onChange={handlePassword} className=\"form-control col-6\" placeholder=\"contraseña\" id=\"passwordLoginInput\" />\n                        </div>\n                        <button className=\"btn btn-success \" id=\"loginButton\" onClick={login} >Iniciar sesión</button>\n\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Login;","/home/pablo/Documentos/swapp/src/components/Rota.js",["133","134","135","136","137","138","139","140","141","142","143"],"import { useState, useEffect } from 'react';\nimport ModalShift from './ModalShift';\nimport BodyRota from './BodyRota';\nimport {Redirect, Route} from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight  } from '@fortawesome/free-solid-svg-icons';\n\nfunction Rota() {\n    const arrowL =  <FontAwesomeIcon icon={faArrowLeft} />\n    const arrowR =  <FontAwesomeIcon icon={faArrowRight} />\n    const dayName = [\"#\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\n    const mes = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n    const month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const [data, setData] = useState([]);\n    const [check, setCheck] = useState([false]);\n    const todayWeek = [];\n    const today = new Date;\n    for (let i = 1; i <= 7; i++) {\n        let first = today.getDate() - today.getDay() + i;\n        let day = new Date(today.setDate(first));\n        todayWeek.push(day);\n    }\n    const [week, setWeek] = useState(todayWeek);\n\n    \n    let token = localStorage.getItem(\"token\");\n    const URLSHIFT = \"http://localhost:8000/shift/rotauser\";\n    \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n        },\n      body: JSON.stringify({dateFromjsn : week[0].toISOString().slice(0, 10), dateTojsn : week[6].toISOString().slice(0, 10)})\n     \n    };\n  \n    function handlenext() {\n        nextWeek();\n    }\n    function handleprev() {\n        prevWeek();\n    }\n    function nextWeek() {\n        const weekResult = [];\n        week.map(date => {\n\n            let result = new Date(date);\n            result.setDate(result.getDate() + 7);\n            weekResult.push(result);\n\n        })\n\n        return setWeek(weekResult);\n    }\n    function prevWeek() {\n        const weekResult = [];\n        week.map(date => {\n            let result = new Date(date);\n            result.setDate(result.getDate() - 7);\n            weekResult.push(result);\n        })\n        return setWeek(weekResult);\n    }\n    const rotaFetch = () =>{\n        fetch(URLSHIFT,reqOpt)\n        .then(response => {\n            if (response.ok){\n                response.json()\n                .then(data => {setData(data);})\n            }\n            if(response.status==401){\n                alert(\"Wopa! no estas logueado o no tienes permisos para acceder\");\n               \n            }\n        })\n           \n        .catch(error => {\n         console.log(\"ha habido un error:\", error)\n        }); \n    }\n    useEffect(() => {\n        rotaFetch();\n    \n\n    }, [week, check ]);\n  \n\n    return (\n        <>\n          <div className=\"row align-items-center bg-dates py-4\">\n            <div  className=\" col d-flex justify-content-center\">\n               <a href=\"#\" onClick={()=>{handleprev()}}>{arrowL} Prev. week</a>\n            </div>\n            <div className=\"text-center col-8\" >\n                <h1>{week[0].getFullYear()}</h1>\n                <h3>Week from {week[0].getDate()} of {month[week[0].getMonth()]} to {week[6].getDate()} of {month[week[6].getMonth()]}</h3>\n            </div>\n            <div  className=\"col d-flex justify-content-center\">\n           \n            <a href=\"#\" onClick={()=>{handlenext()}}> Next week {arrowR}</a>\n            </div>\n        </div>\n\n        <div id=\"content-wrap\">\n            <table className=\"table table-responsive-sm table-responsive-md text-center mb-4\">\n                <thead className=\"table-dark\">\n                    <tr>\n                        {dayName.map(value => {return <th scope=\"col\">{value}</th>})}\n                    </tr>\n                    <tr>\n                        <th className=\"th-rad\" scope=\"col\"></th>\n                        {week.map(day => { return <th colspan=\"1\" scope=\"col\">{(\"0\" + day.getDate()).slice(-2)} - {(\"0\" + (day.getMonth() + 1)).slice(-2)}</th> })}\n\n                    </tr>\n                </thead>\n                <tbody>\n                    <BodyRota  data={data} week={week} setCheck ={setCheck} check={check} />\n\n                </tbody>\n            </table>\n        </div>\n        \n            <Footer />\n        </>\n    )\n}\n\nexport default Rota;","/home/pablo/Documentos/swapp/src/pages/Chat.js",[],["144","145"],"/home/pablo/Documentos/swapp/src/components/RotaMaker.js",["146","147","148","149","150","151","152","153","154"],"import { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Weekshifts from './Weekshifts';\nimport Footer from '../components/Footer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight  } from '@fortawesome/free-solid-svg-icons';\nimport swal from 'sweetalert';\nfunction RotaMaker() {\n  const arrowL =  <FontAwesomeIcon icon={faArrowLeft} />\n  const arrowR =  <FontAwesomeIcon icon={faArrowRight} />\n    const dayName = [\"#\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\n    const shfitType = [\"1\", \"2\"]; /* necesito cambiarlo por 2 y 1 para el back? */\n    // const month = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n    const month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const today = new Date;\n    let token = localStorage.getItem(\"token\");\n    const todayWeek = [];\n    \n    for (let i = 1; i <= 7; i++) {\n      let first = today.getDate() - today.getDay() + i ;\n      let day = new Date(today.setDate(first));\n      todayWeek.push(day);\n    }\n  \n    const[shifts, setShifts] = useState([null]);\n\n   const [week, setWeek] = useState(todayWeek);\n\n   function getDataWeek(){\n    const URLROTA = \"http://localhost:8000/shift/manager/rotacheck\";\n  \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n                },\n      body: JSON.stringify({dateFromjsn :(week[0].toISOString().slice(0, 10)), dateTojsn: (week[6].toISOString().slice(0, 10)) })\n     \n    };\n  \n     \n      fetch(URLROTA,reqOpt)\n      .then(response =>{ \n        if (response.status === 401){\n          alert(\"epaaa no estas logueado tira patras!\")\n        }else{\n\n          response.json()\n          .then(data => {\n          \n             setShifts(data);\n             \n           \n          }\n    \n          ).catch(error => {\n           console.log(\"ha habido un error:\", error)\n          });\n        }\n      })\n    } \nuseEffect(() => {\n  getDataWeek();\n \n \n}, [week]);\n\n   function handlenext(){\n    nextWeek();\n    \n   }\n   function handleprev(){\n    prevWeek();\n    \n   }\n   function nextWeek() {\n    const weekResult = [];\n    week.map(date=>{\n       \n        let result = new Date(date);\n        result.setDate(result.getDate() + 7);\n        weekResult.push(result);\n\n    })\n    setShifts([null])\n    return setWeek(weekResult);\n  }\n  function prevWeek() {\n    const weekResult = [];\n    week.map(date =>{\n       let result = new Date(date);\n        result.setDate(result.getDate() - 7);\n        weekResult.push(result);\n    });\n    setShifts([null]);\n    return setWeek(weekResult);\n  }\n\n  const muestrashifts = () =>{  \n      console.log(\"turnos\",shifts);\n  }\n \n  const sendFetch = () => {\n    const URLADD = \"http://localhost:8000/shift/manager/new\";\n  \n    const reqOpt = {\n      method: 'POST',\n      headers: { 'Content-Type' : 'application/json',\n                 Authorization : `Bearer ${token}`\n                },\n      body: JSON.stringify(shifts)\n     \n    };\n  \n     \n      fetch(URLADD,reqOpt)\n      .then(response =>{ \n        if (response.status === 401){\n          alert(\"Ups! It seems you are not logged in\")\n        }else{\n\n          response.json()\n          .then(data => {\n          swal(data.message, {icon: \"success\",})\n           console.log(data);\n           getDataWeek() ;\n           \n          }\n    \n          ).catch(error => {\n           console.log(\"ha habido un error:\", error)\n          });\n        }\n      })\n  }\n\n  const sendToDb = () =>{\n    swal({\n      title: \"Are you sure you want to commit?\",\n      text: \"Just making sure this is the right rota\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willSend) => {\n      if (willSend) {\n          \n          sendFetch();\n        \n      } else {\n        swal(\" No worries, keep working this hard and commit it when ready\");\n      }\n    });\n  \n  }\n  \n  \n\n    return (\n        <>\n     <div className=\"row align-items-center bg-dates py-4\">\n            <div  className=\" col d-flex justify-content-center\">\n               <a href=\"#\" onClick={()=>{handleprev()}}>{arrowL} Prev. week</a>\n            </div>\n            <div className=\"text-center col-8\" >\n                <h1>{week[0].getFullYear()}</h1>\n                <h3>Week from {week[0].getDate()} of {month[week[0].getMonth()]} to {week[6].getDate()} of {month[week[6].getMonth()]}</h3>\n            </div>\n            <div  className=\"col d-flex justify-content-center\">\n           \n            <a href=\"#\" onClick={()=>{handlenext()}}> Next week {arrowR}</a>\n            </div>\n        </div>\n       \n            <div id=\"content-wrap\">\n                <table id=\"table-rota\" className=\"table table-sm text-center mb-2\">\n            \n                    <thead className=\"table-dark \">\n                    <tr>\n                        {dayName.map(value => {return <th scope=\"col\">{value}</th>})}\n                    </tr>\n                    <tr>\n                        <th className=\"th-rad\" scope=\"col\"></th>\n                        {week.map(day => { return <th colspan=\"1\" scope=\"col\">{(\"0\" + day.getDate()).slice(-2)} - {(\"0\" + (day.getMonth() + 1)).slice(-2)}</th> })}\n\n                    </tr>\n                    </thead>\n                    <tbody className=\"\">\n                       \n                       {\n                       shifts.map(worker =>\n                     <Weekshifts worker= {worker} week= {week} setShifts = {setShifts} shifts = {shifts}/>\n                      ) }\n                    </tbody>\n                    <tfoot className=\"text-center\">\n                      <tr>\n                        <td colspan=\"8\" className=\"table-dark\">\n\n                      <button  className=\"btn btn-success\" onClick={()=>{sendToDb()}}>Enviar a DB</button>\n                        </td>\n                        {/* <td  className=\"table-dark\">\n\n                      <button  className=\"btn btn-success\" onClick={()=>{muestrashifts()}}>turnos consola</button>\n                        </td> */}\n                      </tr>\n                    </tfoot>\n                </table>\n            </div>\n           \n            <Footer />\n  \n    \n        </>\n    )\n}\n\nexport default RotaMaker;","/home/pablo/Documentos/swapp/src/pages/Manager.js",["155"],"import RotaMaker from '../components/RotaMaker'\nimport Register from '../components/Register'\nimport './manager.css';\nfunction Manager() {\n    return (\n      <>\n     \n      <div>\n       \n        \n        <RotaMaker />\n{/* <Register /> */}\n\n      </div>\n      \n      </>\n    );\n  }\n  \n  export default Manager;\n  ","/home/pablo/Documentos/swapp/src/components/Register.js",["156","157"],"function Register() {\n\n    const RegisterInput = {\n        name: \"\",\n        password: \"\",\n        surname: \"\",\n        email:\"\",   \n    }\n\n    const handlePassword = (e) => {\n        RegisterInput.password = e.target.value\n    }\n    const handleUser = (e) => {\n        RegisterInput.email = e.target.value\n    }\n\n    const handleName = (e) => {\n        RegisterInput.name = e.target.value\n    }\n const submit = (e) => {\n     e.preventDefault();\n }\n\n  \n    return (\n        <>\n            <h1>Registrar usuario</h1>\n           \n            <div className=\"container\" id=\"registerContainer\">\n                <form>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"usernameRegisterInput\">nombre</label>\n                        <input type=\"text\" className=\"form-control\" onChange={handleName} placeholder=\"nombre\" id=\"usernameRegisterInput\" />\n                    </div>  \n                    <div className=\"form-group mt-4\">\n                        <label for=\"surnameRegisterInput\">Apellidos</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Apellidos\" id=\"surnameRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"dniRegisterInput\">Dni</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"dniRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"passwordRegisterInput\">Constraseña</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"contraseña\" id=\"passwordRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"emailRegisterInput\">email</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"email\" id=\"emailRegisterInput\" />\n                    </div>\n                    <div className=\"form-group mt-4\">\n                        <label for=\"telephoneRegisterInput\">telefono</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id=\"telephoneRegisterInput\" />\n                    </div>\n                    <button className=\"btn btn-info\" onClick={submit} id=\"sendRegisterButton\">Confirmar</button>\n                </form>\n            </div>\n        </>\n    );\n}\nexport default Register;\n","/home/pablo/Documentos/swapp/src/components/SearchShifts.js",["158","159","160","161","162"],"import { useState, useEffect } from 'react';\n\nfunction SearchShifts({ setFilteredData, data, filteredData }) {\n  const [search, setSearch] = useState(\"\");\n  const [searchHour, setSearchHour] = useState(\"\");\n  const [typeFilter, setTypeFilter] = useState(\"\");\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setSearch(\"\");\n  }\n  useEffect(() => {\n    const results = data.filter(data =>\n      data.branch.toLowerCase().includes(search)\n    );\n    setFilteredData(results);\n  }, [search]);\n\n  // const setFilter = (value) => {\n  //   const result = filteredData.filter(data => data.shiftType == value);\n  //   setFilteredData(result);\n  // }\n  return (\n    <>\n\n      <div className=\"container\">\n\n        <form onSubmit={handleSubmit}>\n\n          <input type=\"text\"\n            className=\"form-control col-4 my-2 mt-4\"\n            placeholder=\"Branch...\"\n            value={search} onChange={(e) => { setSearch(e.target.value) }} />\n          <input className=\"my-2 btn btn-info\" type=\"submit\" value=\"Search\" />\n          {/* <div>\n          <input type=\"checkbox\" id=\"morning\" value=\"morning\" checked onChange={(e) => { setFilter(e.target.value) }} />\n          <label htmlFor=\"morning\">Morning</label>\n          <input type=\"checkbox\" id=\"evening\" value=\"evening\" checked onChange={(e) => { setFilter(e.target.value) }} />\n          <label htmlFor=\"evening\">Evening</label>\n          </div> */}\n        </form>\n       \n      </div>    \n\n    </>\n  );\n}\n\nexport default SearchShifts;","/home/pablo/Documentos/swapp/src/components/ChatWindow.js",[],"/home/pablo/Documentos/swapp/src/pages/LoginPage.js",["163"],"import './loginpage.css';\nimport Login from '../components/Login';\nimport {useState} from 'react'\n\nfunction LoginPage() {\n    return (\n      <>\n     <Login  />\n      </>\n    );\n  }\n  \n  export default LoginPage;","/home/pablo/Documentos/swapp/src/context/GlobalContext.js",[],"/home/pablo/Documentos/swapp/src/context/auth.js",[],"/home/pablo/Documentos/swapp/src/PrivateRoute.js",[],"/home/pablo/Documentos/swapp/src/components/ModalShift.js",[],"/home/pablo/Documentos/swapp/src/pages/Home.js",[],"/home/pablo/Documentos/swapp/src/pages/Pool.js",["164","165","166","167"],"/home/pablo/Documentos/swapp/src/components/ShiftList.js",["168","169"],"/home/pablo/Documentos/swapp/src/components/BodyRota.js",["170","171","172"],"/home/pablo/Documentos/swapp/src/components/Weekshifts.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, useContext } from 'react';\nfunction Weekshifts({ worker, week, setShifts, shifts }) {\n    if (!worker) {\n        return <p>loading...</p>\n    }\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return '';\n        return s.charAt(0).toUpperCase() + s.slice(1);\n      }\n    const shiftType = [\"1\", \"2\"]; \n\n    const updateWorkerInDataResponse = (newWorker) => {\n        return shifts.map(worker => worker.id == newWorker.id ? newWorker : worker)\n    }\n    const updateShiftInWorker = (existingShift, workerObj) => {\n\n        workerObj.shifts = workerObj.shifts.map(shift => {\n            let found = shift.shiftType == existingShift.shiftType\n                && existingShift.date\n                && typeof shift.date == \"string\"\n                && shift.date.substring(0, 10) == existingShift.date.substring(0, 10)\n                ;\n\n            return found ? existingShift : shift\n        })\n\n        return workerObj\n    }\n    const existAnyShift = (workerObj, type, datestr) => {\n        let existingShift = workerObj.shifts.find(shift =>\n            shift.shiftType == type\n            && typeof shift.date == \"string\"\n            && shift.date.substring(0, 10) == datestr);\n        return existingShift;\n    }\n    const existEndShift = (workerObj, type, datestr) => {\n        let existingEndShift = workerObj.shifts.find(shift =>\n            shift.shiftType == type\n            && typeof shift.date == \"string\"\n            && shift.date.substring(0, 10) == datestr);\n        return existingEndShift;\n    }\n    const existStartShift = (workerObj, type, datestr) => {\n        let existingStartShift = workerObj.shifts.find(shift =>\n            shift.shiftType == type\n            && typeof shift.startShift == \"string\"\n            && shift.date.substring(0, 10) == datestr);\n        return existingStartShift;\n    }\n\n    const toggleInput = (e, type, datestr, wid) => {\n        let inputsTarget = e.currentTarget.firstChild;\n    \n        let workerObj = shifts.find(w => { return w.id == wid });\n        let existingShift = existAnyShift(workerObj, type, datestr);\n\n        if (existingShift && existingShift.active == false) {\n\n            existingShift = { shiftType: type, date: datestr, startShift: (datestr + \" \" + inputsTarget.firstChild.value), endShift: (datestr + \" \" + inputsTarget.lastChild.value), active: true };\n\n\n            workerObj = updateShiftInWorker(existingShift, workerObj);\n        }\n        else if (existingShift) {\n\n            existingShift = { shiftType: type, date: datestr, active: false };\n\n            workerObj = updateShiftInWorker(existingShift, workerObj);\n\n        } else {\n            workerObj.shifts.push({\n                date: datestr,\n                shiftType: type,\n                active: false\n            })\n        }\n        let newDataResponse = updateWorkerInDataResponse(workerObj)\n\n        setShifts(newDataResponse);\n\n\n    }\n\n\n    const getStartValue = (e, type, datestr, wid) => {\n\n        if (!e.target.value) { return; }\n\n        let workerObj = shifts.find(w => { return w.id == wid });\n        let existingEndShift = existEndShift(workerObj, type, datestr);\n        let existingStartShift = existStartShift(workerObj, type, datestr);\n        if (existingEndShift) {\n       \n            existingEndShift = { ...existingEndShift, startShift: (datestr + \" \" + e.target.value), active: true }\n          \n            workerObj = updateShiftInWorker(existingEndShift, workerObj);\n\n        } else if (existingStartShift) {\n          \n            existingStartShift = { ...existingStartShift, startShift: (datestr + \" \" + e.target.value) }\n            workerObj = updateShiftInWorker(existingStartShift, workerObj);\n\n        } else {\n \n            workerObj.shifts.push({\n                date: datestr,\n                shiftType: type,\n                startShift: (datestr + \" \" + e.target.value),\n            })\n        }\n        let newDataResponse = updateWorkerInDataResponse(workerObj)\n\n        setShifts(newDataResponse);\n\n\n    }\n\n    const getEndValue = (e, type, datestr, wid) => {\n  \n        if (!e.target.value) {\n            return;\n        }\n\n        let workerObj = shifts.find(w => { return w.id == wid });\n\n        let existingEndShift = existEndShift(workerObj, type, datestr);\n        let existingStartShift = existStartShift(workerObj, type, datestr);\n\n        if (existingStartShift) {\n           \n            existingStartShift = { ...existingStartShift, endShift: (datestr + \" \" + e.target.value), active: true }\n            workerObj = updateShiftInWorker(existingStartShift, workerObj);\n        } else if (existingEndShift) {\n          \n            existingEndShift = { ...existingEndShift, endShift: (datestr + \" \" + e.target.value) }\n            workerObj = updateShiftInWorker(existingEndShift, workerObj);\n\n\n        } else {\n         \n            workerObj.shifts.push({\n               date : datestr,\n                shiftType: type,\n                endShift: (datestr + \" \" + e.target.value)\n            })\n        }\n        let newDataResponse = updateWorkerInDataResponse(workerObj)\n     \n        setShifts(newDataResponse);\n\n\n    }\n\n\n    return (\n        <>\n            {shiftType.map((type) => {\n                let cabecera = \"\";\n                let wid = worker.id;\n\n                if (type == \"1\") { \n                    cabecera = <th className=\"table-dark align-middle\" rowspan=\"2\" id={worker.id} >{capitalize(worker.worker)}</th>;\n                }\n                return (\n                    <tr>\n\n                        { cabecera}\n                        {week.map((day, index) => {\n                            let datestr = day.toISOString().slice(0, 10);\n\n\n                            let conditionShift = worker.shifts.find(shift => shift.shiftType == type && shift.id && new Date ((new Date(shift.date.date).getTime()) + 120*60*1000+1).toISOString().slice(0, 10) == datestr);\n                            let conditionActive = worker.shifts.find(shift => shift.shiftType == type && typeof shift.date == \"string\" && shift.date.substring(0, 10) == datestr);\n\n                            \n                            if (conditionShift) {\n                                \n                                if (conditionShift.active === true) {\n                                    return (<>\n\n                                        <td data-shiftid={conditionShift.id} className={type == \"1\" ? \"td-morning\" : type == \"2\" ? \"td-evening\" : \"\"}>\n                                          \n                                            {(\"0\" + (new Date(conditionShift.startShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(conditionShift.startShift.date).getMinutes())).slice(-2)} /\n                                            {(\"0\" + (new Date(conditionShift.endShift.date).getHours())).slice(-2)}:{(\"0\" + (new Date(conditionShift.endShift.date).getMinutes())).slice(-2)}\n                                          \n                                        </td>\n                                    </>) \n                                }\n                                if (conditionShift.active === false) {\n                                    return (\n\n                                        <td data-shiftid={conditionShift.id} className=\"td-off\">\n                                            <div className=\"\">\n                                                <b>OFF </b>\n                                            </div>\n                                        </td>\n                                    )\n                                } \n                            }else {\n\n                                    return (<>\n                                        <td className={type == \"1\" ? \"td-morning\" : type == \"2\" ? \"td-evening\" : \"\"} data-shiftType={type} data-date={datestr} data-wid={wid} id={index} onDoubleClick={(e) => { toggleInput(e, type, datestr, wid) }}>\n\n                                       \n\n                                            <div className={conditionActive ? (conditionActive.active === false ? \"hide\" : \"\") : \"\"}>\n                                                <input data-shift=\"startShift\" type=\"time\" required onBlur={(e) => { getStartValue(e, type, datestr, wid) }} />\n                                                <input data-shift=\"endShift\" type=\"time\" required onBlur={(e) => { getEndValue(e, type, datestr, wid) }} />\n                                            </div >\n                                            <div className={conditionActive ? conditionActive.active === false ? \"\" : \"hide\" : \"hide\"}>\n                                                <b>OFF</b>\n                                            </div>\n\n\n                                        </td>\n                                    </>)\n                                }\n\n                            })}\n                    </tr>\n                )\n            }\n\n            )\n            }\n        </>\n    );\n}\n\nexport default Weekshifts;\n","/home/pablo/Documentos/swapp/src/components/ChatList.js",[],"/home/pablo/Documentos/swapp/src/pages/NoMatch.js",[],"/home/pablo/Documentos/swapp/src/components/Footer.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":37},{"ruleId":"202","severity":1,"message":"206","line":2,"column":32,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"207","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"208","line":14,"column":8,"nodeType":"204","messageId":"205","endLine":14,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":31,"column":55,"nodeType":"211","messageId":"212","endLine":31,"endColumn":57},{"ruleId":"209","severity":1,"message":"210","line":39,"column":55,"nodeType":"211","messageId":"212","endLine":39,"endColumn":57},{"ruleId":"202","severity":1,"message":"213","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":17,"column":80,"nodeType":"216","endLine":17,"endColumn":101},{"ruleId":"202","severity":1,"message":"217","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"218","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":20},{"ruleId":"202","severity":1,"message":"219","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":23},{"ruleId":"202","severity":1,"message":"220","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":18},{"ruleId":"202","severity":1,"message":"221","line":4,"column":9,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"222","line":4,"column":19,"nodeType":"204","messageId":"205","endLine":4,"endColumn":24},{"ruleId":"202","severity":1,"message":"223","line":13,"column":11,"nodeType":"204","messageId":"205","endLine":13,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":18,"column":19,"nodeType":"226","messageId":"227","endLine":18,"endColumn":27,"fix":"228"},{"ruleId":"229","severity":1,"message":"230","line":47,"column":23,"nodeType":"231","messageId":"232","endLine":47,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":59,"column":23,"nodeType":"231","messageId":"232","endLine":59,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":73,"column":31,"nodeType":"211","messageId":"212","endLine":73,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":87,"column":8,"nodeType":"235","endLine":87,"endColumn":22,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":94,"column":16,"nodeType":"216","endLine":94,"endColumn":57},{"ruleId":"237","severity":1,"message":"238","line":102,"column":13,"nodeType":"216","endLine":102,"endColumn":54},{"ruleId":"198","replacedBy":"239"},{"ruleId":"200","replacedBy":"240"},{"ruleId":"202","severity":1,"message":"241","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"242","line":12,"column":11,"nodeType":"204","messageId":"205","endLine":12,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":16,"column":19,"nodeType":"226","messageId":"227","endLine":16,"endColumn":27,"fix":"243"},{"ruleId":"233","severity":1,"message":"244","line":67,"column":4,"nodeType":"235","endLine":67,"endColumn":10,"suggestions":"245"},{"ruleId":"229","severity":1,"message":"230","line":79,"column":18,"nodeType":"231","messageId":"232","endLine":79,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":91,"column":19,"nodeType":"231","messageId":"232","endLine":91,"endColumn":21},{"ruleId":"202","severity":1,"message":"246","line":100,"column":9,"nodeType":"204","messageId":"205","endLine":100,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":164,"column":16,"nodeType":"216","endLine":164,"endColumn":57},{"ruleId":"237","severity":1,"message":"238","line":172,"column":13,"nodeType":"216","endLine":172,"endColumn":54},{"ruleId":"202","severity":1,"message":"247","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"248","line":10,"column":11,"nodeType":"204","messageId":"205","endLine":10,"endColumn":25},{"ruleId":"202","severity":1,"message":"249","line":13,"column":11,"nodeType":"204","messageId":"205","endLine":13,"endColumn":21},{"ruleId":"202","severity":1,"message":"250","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"202","severity":1,"message":"251","line":5,"column":22,"nodeType":"204","messageId":"205","endLine":5,"endColumn":35},{"ruleId":"202","severity":1,"message":"252","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":20},{"ruleId":"202","severity":1,"message":"253","line":6,"column":22,"nodeType":"204","messageId":"205","endLine":6,"endColumn":35},{"ruleId":"233","severity":1,"message":"254","line":19,"column":6,"nodeType":"235","endLine":19,"endColumn":14,"suggestions":"255"},{"ruleId":"202","severity":1,"message":"256","line":3,"column":9,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"257","line":12,"column":18,"nodeType":"204","messageId":"205","endLine":12,"endColumn":23},{"ruleId":"233","severity":1,"message":"258","line":39,"column":6,"nodeType":"235","endLine":39,"endColumn":8,"suggestions":"259"},{"ruleId":"209","severity":1,"message":"210","line":53,"column":84,"nodeType":"211","messageId":"212","endLine":53,"endColumn":86},{"ruleId":"209","severity":1,"message":"210","line":55,"column":48,"nodeType":"211","messageId":"212","endLine":55,"endColumn":50},{"ruleId":"209","severity":1,"message":"210","line":66,"column":59,"nodeType":"211","messageId":"212","endLine":66,"endColumn":61},{"ruleId":"237","severity":1,"message":"238","line":76,"column":21,"nodeType":"216","endLine":76,"endColumn":84},{"ruleId":"209","severity":1,"message":"210","line":32,"column":29,"nodeType":"211","messageId":"212","endLine":32,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":95,"column":63,"nodeType":"211","messageId":"212","endLine":95,"endColumn":65},{"ruleId":"209","severity":1,"message":"210","line":95,"column":171,"nodeType":"211","messageId":"212","endLine":95,"endColumn":173},{"ruleId":"202","severity":1,"message":"256","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":37},{"ruleId":"209","severity":1,"message":"210","line":13,"column":47,"nodeType":"211","messageId":"212","endLine":13,"endColumn":49},{"ruleId":"209","severity":1,"message":"210","line":18,"column":41,"nodeType":"211","messageId":"212","endLine":18,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":21,"column":48,"nodeType":"211","messageId":"212","endLine":21,"endColumn":50},{"ruleId":"209","severity":1,"message":"210","line":31,"column":29,"nodeType":"211","messageId":"212","endLine":31,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":33,"column":44,"nodeType":"211","messageId":"212","endLine":33,"endColumn":46},{"ruleId":"209","severity":1,"message":"210","line":38,"column":29,"nodeType":"211","messageId":"212","endLine":38,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":40,"column":44,"nodeType":"211","messageId":"212","endLine":40,"endColumn":46},{"ruleId":"209","severity":1,"message":"210","line":45,"column":29,"nodeType":"211","messageId":"212","endLine":45,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":47,"column":44,"nodeType":"211","messageId":"212","endLine":47,"endColumn":46},{"ruleId":"209","severity":1,"message":"210","line":54,"column":56,"nodeType":"211","messageId":"212","endLine":54,"endColumn":58},{"ruleId":"209","severity":1,"message":"210","line":57,"column":51,"nodeType":"211","messageId":"212","endLine":57,"endColumn":53},{"ruleId":"209","severity":1,"message":"210","line":89,"column":56,"nodeType":"211","messageId":"212","endLine":89,"endColumn":58},{"ruleId":"209","severity":1,"message":"210","line":124,"column":56,"nodeType":"211","messageId":"212","endLine":124,"endColumn":58},{"ruleId":"209","severity":1,"message":"210","line":161,"column":26,"nodeType":"211","messageId":"212","endLine":161,"endColumn":28},{"ruleId":"229","severity":1,"message":"260","line":168,"column":48,"nodeType":"231","messageId":"261","endLine":168,"endColumn":50},{"ruleId":"209","severity":1,"message":"210","line":172,"column":94,"nodeType":"211","messageId":"212","endLine":172,"endColumn":96},{"ruleId":"209","severity":1,"message":"210","line":172,"column":209,"nodeType":"211","messageId":"212","endLine":172,"endColumn":211},{"ruleId":"209","severity":1,"message":"210","line":173,"column":95,"nodeType":"211","messageId":"212","endLine":173,"endColumn":97},{"ruleId":"209","severity":1,"message":"210","line":173,"column":167,"nodeType":"211","messageId":"212","endLine":173,"endColumn":169},{"ruleId":"209","severity":1,"message":"210","line":181,"column":94,"nodeType":"211","messageId":"212","endLine":181,"endColumn":96},{"ruleId":"209","severity":1,"message":"210","line":181,"column":123,"nodeType":"211","messageId":"212","endLine":181,"endColumn":125},{"ruleId":"209","severity":1,"message":"210","line":202,"column":61,"nodeType":"211","messageId":"212","endLine":202,"endColumn":63},{"ruleId":"209","severity":1,"message":"210","line":202,"column":90,"nodeType":"211","messageId":"212","endLine":202,"endColumn":92},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Footer' is defined but never used.","'NoMatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useAuth' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'NavLink' is defined but never used.","'url' is assigned a value but never used.","'GlobalContext' is defined but never used.","'ModalShift' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'mes' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"264","text":"265"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rotaFetch'. Either include it or remove the dependency array.","ArrayExpression",["266"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["262"],["263"],"'ReactDOM' is defined but never used.","'shfitType' is assigned a value but never used.",{"range":"267","text":"265"},"React Hook useEffect has a missing dependency: 'getDataWeek'. Either include it or remove the dependency array.",["268"],"'muestrashifts' is assigned a value but never used.","'Register' is defined but never used.","'handlePassword' is assigned a value but never used.","'handleUser' is assigned a value but never used.","'searchHour' is assigned a value but never used.","'setSearchHour' is assigned a value but never used.","'typeFilter' is assigned a value but never used.","'setTypeFilter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'setFilteredData'. Either include them or remove the dependency array. If 'setFilteredData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],"'useState' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'poolFetch'. Either include it or remove the dependency array.",["270"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",[1022,1022],"()",{"desc":"271","fix":"272"},[966,966],{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [week, check, rotaFetch]",{"range":"279","text":"280"},"Update the dependencies array to be: [getDataWeek, week]",{"range":"281","text":"282"},"Update the dependencies array to be: [data, search, setFilteredData]",{"range":"283","text":"284"},"Update the dependencies array to be: [poolFetch]",{"range":"285","text":"286"},[2852,2866],"[week, check, rotaFetch]",[2203,2209],"[getDataWeek, week]",[494,502],"[data, search, setFilteredData]",[1162,1164],"[poolFetch]"]